@page "/login"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<PageTitle>Login</PageTitle>

<h3>Login to Book Trading Hub</h3>

<EditForm Model="@user" OnValidSubmit="HandleLoginSubmit" FormName="loginForm">
    <div class="form-group">
        <!-- Username input field -->
        <InputText id="login-username" placeholder="Username" @bind-Value="user.username" class="form-control" />
    </div>

    <div class="form-group">
        <!-- Password input field -->
        <InputText type="password" id="login-password" placeholder="Password" @bind-Value="user.password" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Sign In</button>
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger mt-2">
        @errorMessage
    </div>
}

@code {
    private User user = new User();
    private string errorMessage;

    // Handle login form submission
    private async Task HandleLoginSubmit()
    {
        try
        {
            // Send login request to the backend API
            var response = await Http.PostAsJsonAsync("https://localhost:7167/api/user", user);

            if (response.IsSuccessStatusCode)
            {
                // Navigate to home page on successful login
                NavigationManager.NavigateTo("/");
            }
            else
            {
                // Show error message on failure
                errorMessage = "Invalid username or password.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
    }

    // Define User model with lowercase properties
    public class User
    {
        public string username { get; set; }
        public string password { get; set; }
        public string email { get; set; }
        public string role { get; set; } = "User"; // Default role
    }
}
