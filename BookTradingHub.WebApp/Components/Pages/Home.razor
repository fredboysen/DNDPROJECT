@page "/"
@inject HttpClient Http
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

<h1 class="welcometext">Welcome to Book Rating Hub!</h1>

<div class="books-container">
    @if (Books == null)
    {
        <p>Loading books...</p>
    }
    else if (!Books.Any())
    {
        <p>No books available.</p>
    }
    else
    {
        @foreach (var book in Books)
        {
           <NavLink class="book-card" id="@($"book-{book.book_Id}")" href="@($"/newrating/{book.book_Id}")">
    <img src="@book.ImageUrl" alt="@book.title" class="book-image" />
    <div class="book-details">
        <h3 class="book-title">@book.title</h3>
        <p class="book-author">Author: @book.author</p>
        <p class="book-isbn">ISBN: @book.isbn</p>
        <p class="book-genre">Genre: @book.genre</p>
        <p class="book-publisher">Publisher: @book.publisher</p>
        <p class="book-publish-date">Published: @book.publish_Date.ToShortDateString()</p>
        <p class="book-condition">Condition: @book.condition</p>
        <p class="@GetRatingClass(book.averageRating)">Rating: @book.averageRating</p>
    </div>
</NavLink>
        }
    }
</div>

@code {
    private List<Book> Books = new List<Book>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Books = await Http.GetFromJsonAsync<List<Book>>("https://localhost:7167/api/books"); 
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching books: {ex.Message}");
        }
    }

    public class Book
    {
        public int book_Id { get; set; }
        public string title { get; set; } = "";
        public string author { get; set; } = "";
        public string isbn { get; set; }  = "";
        public string genre { get; set; } = "";
        public string publisher { get; set; } = "";
        public DateTime publish_Date { get; set; } 
        public string condition { get; set; } = "";
        public double averageRating { get; set; }
        public string ImageUrl { get; set; } = "";
    }
    private string GetRatingClass(double rating)
    {
        if (rating < 2)
        {
            return "book-rating-red";
        }
        else if (rating >= 2 && rating < 3.5)
        {
            return "book-rating-yellow";
        }
        else
        {
            return "book-rating-green";
        }
    }
}


